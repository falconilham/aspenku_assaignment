{"version":3,"sources":["Reducers/Data.js","Reducers/index.js","Store/index.js","API.js","Get.js","Screen/Home.js","App.js","serviceWorker.js","index.js"],"names":["makeActionCreator","type","argNames","args","action","forEach","arg","index","INITIAL_STATE","data","ACTION","state","payload","listdata","addData","rootReducer","combineReducers","Data","handler","RESET_STATE","preloadedState","store","configureStore","reducer","middleware","getDefaultMiddleware","API_KEY","AUTH","a","api","axios","method","headers","Accept","Authorization","body","JSON","stringify","name","login","get","styles","container","display","alignItems","gridRowGap","thumbnail","gridTemplateColumns","cardWrapepr","justifyItems","filter","connect","dispatch","addTheData","useState","min","max","range","setRange","filterMeasure","setFilterMeasure","useEffect","Get","then","res","resData","rows","dataHandler","item","push","catch","err","console","log","Meta","Card","dataProps","maxNumber","Math","apply","map","o","sell_price","filteredData","newFilteredData","f","includes","unit_measure","dataForFilter","Set","style","autoFocus","value","onChange","e","gridColumn","Group","options","length","id","SpreeStore","SpreeProductImages","key","hoverable","width","cover","alt","src","thumbnail_image","title","description","store_name","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3dab638f.chunk.js","sourcesContent":["export function makeActionCreator(type, ...argNames) {\r\n  return function (...args) {\r\n    const action = { type };\r\n    argNames.forEach((arg, index) => {\r\n      action[argNames[index]] = args[index];\r\n    });\r\n    return action;\r\n  };\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  data: [],\r\n};\r\n\r\nfunction handleAddData(state, payload) {\r\n  return {\r\n    ...state,\r\n    data: payload.listdata,\r\n  };\r\n}\r\n\r\nfunction handleDeleteData(state) {\r\n  return {\r\n    ...state,\r\n    data: [],\r\n  };\r\n}\r\n\r\nconst ACTION = {\r\n  \"DATA/ADD_DATA\": handleAddData,\r\n  \"DATA/DELETE_DATA\": handleDeleteData,\r\n};\r\n\r\nexport const addData = makeActionCreator(\"DATA/ADD_DATA\", \"listdata\");\r\nexport const deleteAllData = makeActionCreator(\"DATA/DELETE_DATA\");\r\n\r\nexport default function Data(state = INITIAL_STATE, action) {\r\n  const handler = ACTION[action.type];\r\n  state = action.type === ACTION.RESET_STATE ? INITIAL_STATE : state;\r\n  return handler ? handler(state, action) : state;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport Data from \"./Data\";\r\n\r\nconst rootReducer = combineReducers({\r\n  Data,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./../Reducers\";\r\n\r\nexport function configureAppStore(preloadedState) {\r\n  const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [...getDefaultMiddleware()],\r\n    preloadedState,\r\n  });\r\n\r\n  if (process.env.NODE_ENV !== \"production\" && module.hot) {\r\n    module.hot.accept(\"./../Reducers\", () => store.replaceReducer(rootReducer));\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureAppStore();\r\nexport default store;\r\n","const API_KEY = `http://apis.aspenku.com`;\r\nconst AUTH = `Basic QXNwZW5rdTpBc3Blbmt1?`;\r\n\r\nexport { API_KEY, AUTH };\r\n","import axios from \"axios\";\r\nimport { API_KEY, AUTH } from \"./API\";\r\n\r\nexport default async function Get(type) {\r\n  const api = `${API_KEY}${type}`;\r\n  return axios.get(await api, {\r\n    method: \"post\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: AUTH,\r\n    },\r\n    body: JSON.stringify({\r\n      name: \"Hubot\",\r\n      login: \"hubot\",\r\n    }),\r\n  });\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addData } from \"../Reducers/Data\";\r\nimport { Card, Slider, Checkbox } from \"antd\";\r\nimport Get from \"../Get\";\r\nimport { API_KEY } from \"../API\";\r\n\r\nfunction Home({ addTheData, data }) {\r\n  let [range, setRange] = useState({\r\n    min: 0,\r\n    max: 303,\r\n  });\r\n  let [filterMeasure, setFilterMeasure] = useState([]);\r\n  useEffect(() => {\r\n    Get(`/api/v1/product?limit=50`)\r\n      .then((res) => {\r\n        let resData = res.data.data.rows ?? [];\r\n        let dataHandler = [...data.Data.data];\r\n        for (let item in resData) {\r\n          dataHandler.push(res.data.data.rows[item]);\r\n        }\r\n        addTheData(dataHandler);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  let { Meta } = Card;\r\n  let dataProps = data.Data.data;\r\n  let maxNumber = Math.max.apply(\r\n    Math,\r\n    dataProps.map(function (o) {\r\n      return o.sell_price;\r\n    })\r\n  );\r\n\r\n  //filter by price\r\n  let filteredData = dataProps.filter(\r\n    (item) => item.sell_price >= range.min && item.sell_price <= range.max\r\n  );\r\n\r\n  //filter by price and checkbox\r\n  let newFilteredData = filteredData.filter((f) =>\r\n    filterMeasure.includes(f.unit_measure)\r\n  );\r\n\r\n  //map all unit measure\r\n  let dataForFilter = new Set(dataProps.map((item) => item.unit_measure));\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.filter}>\r\n        <div>\r\n          <h3>Filter By Price</h3>\r\n          <Slider\r\n            range\r\n            autoFocus\r\n            value={[range.min, range.max]}\r\n            min={0}\r\n            max={maxNumber}\r\n            onChange={(e) =>\r\n              setRange({\r\n                ...range,\r\n                min: e[0],\r\n                max: e[1],\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        <div style={{ gridColumn: \"3 /3\" }}>\r\n          <h3>Filter By Unit Measure</h3>\r\n          <Checkbox.Group\r\n            options={[...dataForFilter]}\r\n            onChange={(e) => setFilterMeasure(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={styles.thumbnail}>\r\n        {(\r\n          (filterMeasure.length > 0 ? newFilteredData : filteredData) || []\r\n        ).map(\r\n          ({\r\n            id,\r\n            name,\r\n            sell_price,\r\n            unit_measure,\r\n            SpreeStore,\r\n            SpreeProductImages,\r\n          }) => (\r\n            <div style={styles.cardWrapepr} key={id}>\r\n              <Card\r\n                hoverable\r\n                style={{ width: 240, alignItems: \"center\" }}\r\n                cover={\r\n                  <img\r\n                    alt=\"example\"\r\n                    src={`${API_KEY}${SpreeProductImages[0].thumbnail_image}`}\r\n                  />\r\n                }\r\n              >\r\n                <Meta title={name} description={SpreeStore.store_name} />\r\n                <div>{`$ ${sell_price}`}</div>\r\n              </Card>\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nlet styles = {\r\n  container: {\r\n    display: \"grid\",\r\n    alignItems: \"center\",\r\n    gridRowGap: 30,\r\n  },\r\n  thumbnail: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr 1fr 1fr\",\r\n    gridRowGap: 10,\r\n  },\r\n  cardWrapepr: {\r\n    display: \"grid\",\r\n    justifyItems: \"center\",\r\n  },\r\n  filter: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr 1fr 1fr\",\r\n  },\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTheData: (data) => {\r\n      dispatch(addData(data));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\nimport \"./App.css\";\n\nimport Home from \"./Screen/Home\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Home />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}